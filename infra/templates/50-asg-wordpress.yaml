AWSTemplateFormatVersion: '2010-09-09'
Description: WordPress app tier - building this incrementally

Parameters:
  StackNamePrefix: { Type: String }
  VpcId: { Type: String }
  AlbSecurityGroupId:
    Type: String
    Description: SG-ID för ALB (källa för HTTP-ingress)
  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues: [t3.micro, t3.small]
    Description: EC2-instancs-typ för app-lagret
  AmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64
    Description: Senaste Amazon Linux 2023 AMI via SSM
  PrivateAppSubnetIds:
    Type: CommaDelimitedList
    Description: Privata app-subnät (minst två AZ)
  TargetGroupArn:
    Type: String
    Description: TargetGroup från 20-alb.yaml
  FileSystemId:
    Type: String
    Description: EFS FileSystemId att montera på instanserna
  DbEndpoint: { Type: String }
  DbName: { Type: String }
  DbUser:
    Type: String
    Default: wp_user
  DbPassword:
    Type: String
    NoEcho: true
  ForceUpdateToken: # Dummy: sub the value when the ASG-stack needs to be force rebooted
    Type: String
    Default: v20

Resources:
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: App SG - allow HTTP only from ALB-SG
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref AlbSecurityGroupId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${StackNamePrefix}-app-sg'
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub '${StackNamePrefix}-lt'
      LaunchTemplateData:
        ImageId: !Ref AmiId
        InstanceType: !Ref InstanceType
        SecurityGroupIds: [ !Ref AppSecurityGroup ]
        MetadataOptions: { HttpTokens: required }
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub '${StackNamePrefix}-app'
              - Key: ForceUpdateToken
                Value: !Ref ForceUpdateToken
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            set -euxo pipefail

            # 0) Paket (AL2)
            yum -y update
            yum -y install httpd php php-mysqlnd php-json php-xml php-mbstring php-gd php-opcache php-curl php-zip

            # 1) Växla MPM: event -> prefork (bäst för mod_php)
            sed -i 's/^LoadModule mpm_event_module/#LoadModule mpm_event_module/' /etc/httpd/conf.modules.d/00-mpm.conf || true
            if ! grep -q 'mpm_prefork_module' /etc/httpd/conf.modules.d/10-mpm_prefork.conf 2>/dev/null; then
              echo 'LoadModule mpm_prefork_module modules/mod_mpm_prefork.so' > /etc/httpd/conf.modules.d/10-mpm_prefork.conf
            fi

            # 2) .htaccess (WP vänligt) + index.php prioritet
            sed -i 's/^\s*AllowOverride\s\+None/AllowOverride All/' /etc/httpd/conf/httpd.conf || true
            sed -i 's/DirectoryIndex .*/DirectoryIndex index.php index.html/' /etc/httpd/conf/httpd.conf || true

            # 3) Testfiler
            mkdir -p /var/www/html
            cat >/var/www/html/php-health.php <<'PHP'
            <?php http_response_code(200); echo "OK"; ?>
            PHP

            cat >/var/www/html/info.php <<'PHP'
            <?php phpinfo(); ?>
            PHP

            # Mer förklarande DB-test med tydliga fel (TILLFÄLLIGT)
            cat >/var/www/html/dbtest2.php <<'PHP'
            <?php
            error_reporting(E_ALL);
            ini_set('display_errors', 1);
            $host='${DbEndpoint}'; $db='${DbName}'; $user='${DbUser}'; $pass='${DbPassword}';
            echo "HOST=".$host." DB=".$db."<br/>\n"; // ofarligt att visa host+db
            mysqli_report(MYSQLI_REPORT_OFF);
            $link = @mysqli_init();
            if ($link === false) { http_response_code(500); die("MYSQLI INIT FAIL"); }
            @mysqli_options($link, MYSQLI_OPT_CONNECT_TIMEOUT, 5);
            if (!@mysqli_real_connect($link, $host, $user, $pass, $db)) {
              http_response_code(500);
              die("MYSQLI FAIL: ".mysqli_connect_error());
            }
            echo "MYSQLI OK";
            mysqli_close($link);
            PHP

            chown -R apache:apache /var/www/html
            find /var/www/html -type d -exec chmod 755 {} \;
            find /var/www/html -type f -exec chmod 644 {} \;

            # 4) Starta om Apache (med prefork)
            systemctl enable --now httpd
            systemctl restart httpd

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
        AutoScalingRollingUpdate:
          MinInstancesInService: 0
          MaxBatchSize: 1
          PauseTime: PT2M
        AutoScalingReplacingUpdate:
          WillReplace: false

    Properties:
      VPCZoneIdentifier: !Ref PrivateAppSubnetIds
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      TargetGroupARNs:
        - !Ref TargetGroupArn
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      HealthCheckType: ELB
      HealthCheckGracePeriod: 60
      Tags:
        - Key: Name
          Value: !Sub '${StackNamePrefix}-asg'
          PropagateAtLaunch: true

Outputs:
  AppSecurityGroupId:
    Value: !Ref AppSecurityGroup
    Description: SG-ID för WordPress-instanser