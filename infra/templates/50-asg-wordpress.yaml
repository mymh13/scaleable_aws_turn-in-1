AWSTemplateFormatVersion: '2010-09-09'
Description: WordPress app tier - stegvis bygge (börjar med parametrar)

Parameters:
  StackNamePrefix: { Type: String }
  VpcId: { Type: String }
  AlbSecurityGroupId:
    Type: String
    Description: SG-ID för ALB (källa för HTTP-ingress)
  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues: [t3.micro, t3.small]
    Description: EC2-instancs-typ för app-lagret
  AmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64
    Description: Senaste Amazon Linux 2023 AMI via SSM
  PrivateAppSubnetIds:
    Type: CommaDelimitedList
    Description: Privata app-subnät (minst två AZ)
  TargetGroupArn:
    Type: String
    Description: TargetGroup från 20-alb.yaml
  FileSystemId:
    Type: String
    Description: EFS FileSystemId att montera på instanserna
  DbEndpoint: { Type: String }
  DbName: { Type: String }
  DbUser:
    Type: String
    Default: wp_user
  DbPassword:
    Type: String
    NoEcho: true

Resources:
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: App SG - allow HTTP only from ALB-SG
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref AlbSecurityGroupId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${StackNamePrefix}-app-sg'
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub '${StackNamePrefix}-lt'
      LaunchTemplateData:
        ImageId: !Ref AmiId
        InstanceType: !Ref InstanceType
        SecurityGroupIds: [ !Ref AppSecurityGroup ]
        MetadataOptions: { HttpTokens: required }
        TagSpecifications:
          - ResourceType: instance
            Tags: [{ Key: Name, Value: !Sub '${StackNamePrefix}-app' }]
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            exec > /var/log/userdata.log 2>&1

            # Paketmanager (AL2 = yum, AL2023 = dnf)
            PKG="yum"; command -v dnf >/dev/null 2>&1 && PKG="dnf"

            $PKG -y update
            $PKG -y install httpd php php-mysqlnd amazon-efs-utils nfs-utils curl tar unzip || \
              $PKG -y install httpd amazon-efs-utils nfs-utils curl tar unzip

            systemctl enable httpd

            # --- EFS mount (shared wp-content) ---
            mkdir -p /mnt/efs
            if ! grep -q "${FileSystemId}.efs.${AWS::Region}.amazonaws.com:/" /etc/fstab; then
              echo "${FileSystemId}.efs.${AWS::Region}.amazonaws.com:/ /mnt/efs efs _netdev,tls 0 0" >> /etc/fstab
            fi
            mount -a
            mkdir -p /mnt/efs/wp-content
            chown -R apache:apache /mnt/efs/wp-content

            # --- Web root ---
            mkdir -p /var/www/html

            # Health-sida (lämna kvar, men WordPress tar över index.php)
            echo "<?php header('Content-Type: text/plain'); echo 'OK from ' . gethostname() . \"\\n\"; ?>" > /var/www/html/health.php

            # --- Fetch and deploy WordPress ---
            TMP=/tmp/wp.$$; mkdir -p $TMP
            curl -L -o $TMP/wordpress.tar.gz https://wordpress.org/latest.tar.gz
            tar -xzf $TMP/wordpress.tar.gz -C $TMP
            rsync -a $TMP/wordpress/ /var/www/html/

            # Symlink wp-content -> EFS, idempotent
            if [ -d /var/www/html/wp-content ] && [ ! -L /var/www/html/wp-content ]; then
              rm -rf /var/www/html/wp-content
            fi
            ln -sfn /mnt/efs/wp-content /var/www/html/wp-content

            # --- wp-config, copy sample and update with our data ---
            cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php
            sed -i "s/database_name_here/${DbName}/" /var/www/html/wp-config.php
            sed -i "s/username_here/${DbUser}/" /var/www/html/wp-config.php
            sed -i "s/password_here/${DbPassword}/" /var/www/html/wp-config.php
            sed -i "s/localhost/${DbEndpoint}/" /var/www/html/wp-config.php
            echo "define('FS_METHOD','direct');" >> /var/www/html/wp-config.php
            # Salter (om internet tillåts; annars hoppa över)
            curl -s https://api.wordpress.org/secret-key/1.1/salt/ >> /var/www/html/wp-config.php || true

            chown -R apache:apache /var/www/html
            find /var/www/html -type d -exec chmod 755 {} \;
            find /var/www/html -type f -exec chmod 644 {} \;

            systemctl restart httpd

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: false
      AutoScalingRollingUpdate:
        MinInstancesInService: '0'
        MaxBatchSize: '1'
        PauseTime: PT2M
    Properties:
      VPCZoneIdentifier: !Ref PrivateAppSubnetIds
      MinSize: '1'
      MaxSize: '2'
      DesiredCapacity: '1'
      TargetGroupARNs: [ !Ref TargetGroupArn ]
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      HealthCheckType: ELB
      HealthCheckGracePeriod: 60
      Tags:
        - Key: Name
          Value: !Sub '${StackNamePrefix}-asg'
          PropagateAtLaunch: true

Outputs:
  AppSecurityGroupId:
    Value: !Ref AppSecurityGroup
    Description: SG-ID för WordPress-instanser