AWSTemplateFormatVersion: '2010-09-09'
Description: WordPress app tier - building this incrementally

Parameters:
  StackNamePrefix: { Type: String }
  VpcId: { Type: String }
  AlbSecurityGroupId:
    Type: String
    Description: SG-ID för ALB (källa för HTTP-ingress)
  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues: [t3.micro, t3.small]
    Description: EC2-instancs-typ för app-lagret
  AmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64
    Description: Senaste Amazon Linux 2023 AMI via SSM
  PrivateAppSubnetIds:
    Type: CommaDelimitedList
    Description: Privata app-subnät (minst två AZ)
  TargetGroupArn:
    Type: String
    Description: TargetGroup från 20-alb.yaml
  FileSystemId:
    Type: String
    Description: EFS FileSystemId att montera på instanserna
  DbEndpoint: { Type: String }
  DbName: { Type: String }
  DbUser:
    Type: String
    Default: wp_user
  DbPassword:
    Type: String
    NoEcho: true
  ForceUpdateToken: # Dummy: sub the value when the ASG-stack needs to be force rebooted
    Type: String
    Default: v21
  KeyPairName: { Type: AWS::EC2::KeyPair::KeyName }

Resources:
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: App SG - allow HTTP only from ALB-SG
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref AlbSecurityGroupId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${StackNamePrefix}-app-sg'
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub '${StackNamePrefix}-lt'
      LaunchTemplateData:
        ImageId: !Ref AmiId
        InstanceType: !Ref InstanceType
        SecurityGroupIds: [ !Ref AppSecurityGroup ]
        MetadataOptions: { HttpTokens: required }
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub '${StackNamePrefix}-app'
              - Key: ForceUpdateToken
                Value: !Ref ForceUpdateToken
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            set -euxo pipefail
            exec > >(tee -a /var/log/user-data.log) 2>&1

            MARKER="/var/local/wp_bootstrapped"
            if [ -f "$MARKER" ]; then
              echo "[UserData] Already bootstrapped, exiting."
              exit 0
            fi

            # ---- Packages (Apache + PHP, no FPM) ----
            dnf -y update
            dnf -y install httpd php php-cli php-common php-mysqlnd php-json php-gd php-mbstring curl tar unzip

            systemctl enable --now httpd
            systemctl disable --now php-fpm || true

            # ---- Web root ----
            WEBROOT="/var/www/html"
            mkdir -p "$WEBROOT"

            # ---- Fetch WordPress if empty (or only default index) ----
            if [ -z "$(ls -A $WEBROOT 2>/dev/null | grep -v '^index.html$')" ]; then
              cd /tmp
              curl -fsSL https://wordpress.org/latest.tar.gz -o wp.tar.gz
              tar -xzf wp.tar.gz
              rsync -a wordpress/ "$WEBROOT"/
            fi

            # ---- wp-config.php from parameters (create only if missing) ----
            if [ ! -f "$WEBROOT/wp-config.php" ]; then
              cat > "$WEBROOT/wp-config.php" <<'PHP'
            <?php
            define('DB_NAME',     '${DbName}');
            define('DB_USER',     '${DbUser}');
            define('DB_PASSWORD', '${DbPassword}');
            define('DB_HOST',     '${DbEndpoint}');
            define('DB_CHARSET',  'utf8');
            define('DB_COLLATE',  '');
            // Allow direct FS writes (we will move wp-content to EFS later)
            if (!defined('FS_METHOD')) define('FS_METHOD', 'direct');
            // Salts injected below
            PHP

              # Add salts
              curl -fsSL https://api.wordpress.org/secret-key/1.1/salt/ >> "$WEBROOT/wp-config.php"

              # Finish config
              cat >> "$WEBROOT/wp-config.php" <<'PHP'
            $table_prefix = 'wp_';
            define('WP_DEBUG', false);
            if ( !defined('ABSPATH') ) define('ABSPATH', __DIR__ . '/');
            require_once ABSPATH . 'wp-settings.php';
            PHP
            fi

            # ---- Health pages ----
            cat > "$WEBROOT/php-health.php" <<'PHP'
            <?php echo "OK: php ".PHP_VERSION; ?>
            PHP

            cat > "$WEBROOT/dbtest2.php" <<'PHP'
            <?php
              $host='${DbEndpoint}'; $db='${DbName}'; $user='${DbUser}'; $pass='${DbPassword}';
              echo "HOST=$host DB=$db\n";
              $mysqli = @new mysqli($host, $user, $pass, $db);
              if ($mysqli->connect_errno) { echo "MYSQLI FAIL: {$mysqli->connect_error}"; exit; }
              echo "MYSQLI OK";
            ?>
            PHP

            # ---- Permissions ----
            chown -R apache:apache "$WEBROOT"
            find "$WEBROOT" -type d -exec chmod 755 {} \;
            find "$WEBROOT" -type f -exec chmod 644 {} \;

            # ---- Apache sane config ----
            sed -i 's/^#ServerName.*/ServerName localhost/' /etc/httpd/conf/httpd.conf || true
            systemctl restart httpd

            # ---- Done ----
            touch "$MARKER"
            echo "[UserData] Bootstrap complete."

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
        AutoScalingRollingUpdate:
          MinInstancesInService: 0
          MaxBatchSize: 1
          PauseTime: PT2M
        AutoScalingReplacingUpdate:
          WillReplace: false

    Properties:
      VPCZoneIdentifier: !Ref PrivateAppSubnetIds
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      TargetGroupARNs:
        - !Ref TargetGroupArn
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      HealthCheckType: ELB
      HealthCheckGracePeriod: 60
      Tags:
        - Key: Name
          Value: !Sub '${StackNamePrefix}-asg'
          PropagateAtLaunch: true

Outputs:
  AppSecurityGroupId:
    Value: !Ref AppSecurityGroup
    Description: SG-ID för WordPress-instanser